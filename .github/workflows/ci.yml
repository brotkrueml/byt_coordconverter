name: CI

on:
  push:
    paths:
      - 'composer.json'
      - '.github/workflows/ci.yml'
      - '**.php'
  pull_request:
    paths:
      - 'composer.json'
      - '.github/workflows/ci.yml'
      - '**.php'

jobs:
  build:
    name: Build PHP/TYPO3
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-versions: 7.4
            typo3-versions: ^10
          - php-versions: 7.4
            typo3-versions: ^11
          - php-versions: 8.0
            typo3-versions: ^11
          - php-versions: 8.1
            typo3-versions: ^11
          - php-versions: 8.1
            typo3-versions: ^12
          - php-versions: 8.2
            typo3-versions: ^11
          - php-versions: 8.2
            typo3-versions: ^12
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
      - name: Install composer dependencies
        run: |
          composer --version
          composer require typo3/cms-core=${{ matrix.typo3-versions }} --no-progress
          git checkout composer.json
      - name: Run PHP linter
        run: |
          find . -name \*.php  ! -path "./.Build/*" -exec php -l {} \;
      - name: Run unit tests
        run: |
          .Build/bin/phpunit -c Tests/phpunit.xml.dist
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: mbstring
      - name: Install composer dependencies
        run: |
          composer --version
          composer install --no-progress --no-suggest
      - name: Normalize composer.json
        run: |
          composer normalize --dry-run
      - name: Check coding standards
        run: |
          .Build/bin/ecs check --no-progress-bar
      - name: Run phpstan
        run: |
          make phpstan
      - name: Generate code coverage
        run: |
          .Build/bin/phpunit -c Tests/phpunit.xml.dist --log-junit .Build/logs/phpunit.xml --coverage-text --coverage-clover .Build/logs/clover.xml
      - name: Send code coverage report to coveralls.io
        run: .Build/bin/php-coveralls -v
        env:
          COVERALLS_RUN_LOCALLY: 1
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
